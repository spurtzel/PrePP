Python 3.8.3rc1 (tags/v3.8.3rc1:802eb67, Apr 29 2020, 21:39:14) [MSC v.1924 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> 
= RESTART: C:\Users\stevi\Desktop\BikeCity Queries\determine_push_pull_muse_and_centralized_push_pull_costs.py
single_sink_evaluation_node 0
SEQ(A, D, I, E)

~~
SEQ(A, D, I, E)
Determine all needed event type permutations..
Event type permutations determined!
Determine single selectivities for each projection..
Single selectivities determined for each projection!
single_selectivity_of_eventtype_within_projection: {'A': 1.0, 'D': 1.0, 'E': 1.0, 'I': 1.0, 'A|AD': 0.07218207115709765, 'D|AD': 0.6926927864286353, 'E|AE': 0.8977641964175158, 'A|AE': 0.0556939118306595, 'I|AI': 0.7666374071300626, 'A|AI': 0.06521988039584056, 'D|DE': 0.5006603199266052, 'E|DE': 0.09986811019361351, 'D|DI': 0.24005494763359492, 'I|DI': 0.20828564665251942, 'E|EI': 0.3334514967423629, 'I|EI': 0.14994684530875527, 'D|ADE': 0.16902988627776458, 'A|ADE': 0.14977531241449005, 'E|ADE': 0.004937490574462832, 'I|ADI': 0.3805877030355495, 'A|ADI': 0.2519055077006162, 'D|ADI': 0.0013038198780208018, 'I|AEI': 0.4042502097054269, 'A|AEI': 0.5313787418681709, 'E|AEI': 0.0005819096816636293, 'E|DEI': 0.6020123895890485, 'I|DEI': 0.01731357341949111, 'D|DEI': 0.011992724879295256, 'A|ADEI': 0.24706894488855327, 'E|ADEI': 0.004022102868320153, 'I|ADEI': 0.12910164878279, 'D|ADEI': 0.00012179147855658824}
exact_push_pull_plan_for_a_projection: [['A', 'E', 'I'], ['D']]
4 : [['I'], ['A'], ['D'], ['E']]
10609.12520347508
used_eventtypes_to_pull: [[], ['I'], ['I', 'A'], ['D', 'A']]
3 : [['A', 'I'], ['D'], ['E']]
5888.858942537688
used_eventtypes_to_pull: [[], ['I', 'A'], ['D', 'A']]
2 : [['A', 'E', 'I'], ['D']]
5877.15332792134
used_eventtypes_to_pull: [[], ['E', 'I', 'A']]
1 : [['A', 'D', 'E', 'I']]
23313
used_eventtypes_to_pull: [[]]
§§§§§§§§§§ Push-Pull MuSE costs §§§§§§§§§§
####### GREEDY #######
Greedy network costs: 12765.54703596165
Greedy Average: 12765.54703596165
Average greedy algorithm execution time: 0.0004038000000000097
####### EXACT #######
Exact network costs: 5877.15332792134
Exact Average: 5877.15332792134
Average exact algorithm execution time: 0.0
####### FACTORIAL #######
Factorial approximated network costs: 5888.858942537688
Factorial Average: 5888.858942537688
Average factorial approximation algorithm execution time: 0.003704400000000052
####### SAMPLING #######
Sampling approximated network costs: 5877.15332792134
Sampling Average: 5877.15332792134
Average sampling approximation algorithm execution time: 0.0015604000000000173
#######################
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~AFTER 1 RUNS, THERE HAVE BEEN 0 ERRORS~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
exact_push_pull_plan_for_a_projection: [['A', 'I', 'E'], ['D']]
4 : [['I'], ['A'], ['D'], ['E']]
10609.12520347508
used_eventtypes_to_pull: [[], ['I'], ['I', 'A'], ['D', 'A']]
3 : [['A', 'I'], ['D'], ['E']]
5888.858942537688
used_eventtypes_to_pull: [[], ['I', 'A'], ['D', 'A']]
2 : [['A', 'I', 'E'], ['D']]
5877.15332792134
used_eventtypes_to_pull: [[], ['E', 'I', 'A']]
1 : [['A', 'D', 'I', 'E']]
23313
used_eventtypes_to_pull: [[]]
§§§§§§§§§§ Centralized Push-Pull costs §§§§§§§§§§
####### GREEDY #######
Greedy network costs: 12765.54703596165
Greedy Average: 12765.54703596165
Average greedy algorithm execution time: 0.0004237999999999742
####### EXACT #######
Exact network costs: 5877.15332792134
Exact Average: 5877.15332792134
Average exact algorithm execution time: 0.0
####### FACTORIAL #######
Factorial approximated network costs: 5888.858942537688
Factorial Average: 5888.858942537688
Average factorial approximation algorithm execution time: 0.0034311000000000202
####### SAMPLING #######
Sampling approximated network costs: 23313
Sampling Average: 23313.0
Average sampling approximation algorithm execution time: 0.001346700000000034
#######################
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~AFTER 1 RUNS, THERE HAVE BEEN 0 ERRORS~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Determine single selectivities for each projection..
Single selectivities determined for each projection!
single_selectivity_of_eventtype_within_projection: {'A': 1.0, 'D': 1.0, 'E': 1.0, 'I': 1.0, 'A|AD': 0.14947048520729844, 'D|AD': 0.3345142014535895, 'E|AE': 0.4166795367091922, 'A|AE': 0.11999629354223809, 'A|AI': 0.09445964757479555, 'I|AI': 0.5293265567226336, 'E|DE': 0.20332467968764323, 'D|DE': 0.2459121050962053, 'D|DI': 0.7225706762694579, 'I|DI': 0.06919738323473594, 'I|EI': 0.5024557249713131, 'E|EI': 0.09951125545012882, 'A|ADE': 0.3707496976578547, 'D|ADE': 0.22547200335032358, 'E|ADE': 0.0014953284073348462, 'I|ADI': 0.38701646701202863, 'A|ADI': 0.05815939553824792, 'D|ADI': 0.005553422107314639, 'A|AEI': 0.2751674773297214, 'I|AEI': 0.8767950976133853, 'E|AEI': 0.0005181014381053457, 'E|DEI': 0.8234916618401283, 'I|DEI': 0.10875015784292068, 'D|DEI': 0.0013957926622850457, 'A|ADEI': 1.0, 'D|ADEI': 1.0, 'E|ADEI': 1.0, 'I|ADEI': 1.0}
exact_push_pull_plan_for_a_projection: [['A', 'I'], ['D'], ['E']]
4 : [['A'], ['I'], ['D'], ['E']]
11587.844332443914
used_eventtypes_to_pull: [[], ['A'], ['I', 'A'], ['I', 'A']]
3 : [['A', 'I'], ['D'], ['E']]
7184.714801744594
used_eventtypes_to_pull: [[], ['I', 'A'], ['I', 'A']]
2 : [['A', 'E', 'I'], ['D']]
7438.565160587141
used_eventtypes_to_pull: [[], ['I', 'E']]
1 : [['A', 'D', 'E', 'I']]
23313
used_eventtypes_to_pull: [[]]
§§§§§§§§§§ Push-Pull MuSE costs §§§§§§§§§§
####### GREEDY #######
Greedy network costs: 12159.990180646448
Greedy Average: 12462.76860830405
Average greedy algorithm execution time: 0.0004003999999999952
####### EXACT #######
Exact network costs: 7184.714801744594
Exact Average: 6530.934064832967
Average exact algorithm execution time: 0.0
####### FACTORIAL #######
Factorial approximated network costs: 7184.714801744594
Factorial Average: 6536.786872141141
Average factorial approximation algorithm execution time: 0.003453050000000013
####### SAMPLING #######
Sampling approximated network costs: 7184.714801744594
Sampling Average: 6530.934064832967
Average sampling approximation algorithm execution time: 0.0014961000000000002
#######################
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~AFTER 2 RUNS, THERE HAVE BEEN 0 ERRORS~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
exact_push_pull_plan_for_a_projection: [['A', 'I'], ['D'], ['E']]
4 : [['A'], ['I'], ['D'], ['E']]
11587.844332443914
used_eventtypes_to_pull: [[], ['A'], ['I', 'A'], ['I', 'A']]
3 : [['A', 'I'], ['D'], ['E']]
7184.714801744594
used_eventtypes_to_pull: [[], ['I', 'A'], ['I', 'A']]
2 : [['A', 'I', 'E'], ['D']]
7438.565160587141
used_eventtypes_to_pull: [[], ['I', 'E']]
1 : [['A', 'D', 'I', 'E']]
23313
used_eventtypes_to_pull: [[]]
§§§§§§§§§§ Centralized Push-Pull costs §§§§§§§§§§
####### GREEDY #######
Greedy network costs: 12159.990180646448
Greedy Average: 12462.76860830405
Average greedy algorithm execution time: 0.00042914999999998926
####### EXACT #######
Exact network costs: 7184.714801744594
Exact Average: 6530.934064832967
Average exact algorithm execution time: 0.0
####### FACTORIAL #######
Factorial approximated network costs: 7184.714801744594
Factorial Average: 6536.786872141141
Average factorial approximation algorithm execution time: 0.0033547500000000174
####### SAMPLING #######
Sampling approximated network costs: 7438.565160587141
Sampling Average: 15375.78258029357
Traceback (most recent call last):
  File "C:\Users\stevi\Desktop\BikeCity Queries\determine_push_pull_muse_and_centralized_push_pull_costs.py", line 839, in <module>
    print("Sampling Average:", all_sampling_costs_single_sink/idx)
KeyboardInterrupt
>>> 